// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ArenaService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf {

  /// <summary>Holder for reflection information generated from ArenaService.proto</summary>
  public static partial class ArenaServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for ArenaService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArenaServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJBcmVuYVNlcnZpY2UucHJvdG8SCHByb3RvYnVmIh4KDkJhbGFuY2VSZXF1",
            "ZXN0EgwKBG5hbWUYASABKAkiLQoMQmFsYW5jZVJlcGx5EgwKBG5hbWUYASAB",
            "KAkSDwoHYmFsYW5jZRgCIAEoAiIuCgxMb2dpblJlcXVlc3QSDAoEbmFtZRgB",
            "IAEoCRIQCghwYXNzd29yZBgCIAEoCSIsCgpMb2dpblJlcGx5EhAKCHRvY2tl",
            "bklEGAEgASgJEgwKBG5hbWUYAiABKAkiXwoUQXJlbmFJbml0aWF0ZVJlcXVl",
            "c3QSEAoIdG9ja2VuSUQYASABKAkSEwoLdG9ja2VuQXJlbmEYAiABKAkSEgoK",
            "dGVhbVRvY2tlbhgDIAEoCRIMCgROaWNrGAQgASgJIjsKEEFyZW5hRmluZFJl",
            "cXVlc3QSEwoLdG9ja2VuQXJlbmEYASABKAkSEgoKdGVhbVRvY2tlbhgCIAEo",
            "CSIkCg5BcmVuYUZpbmRSZXBseRISCgpOYW1lc0FsaWFzGAEgAygJIl0KEkFy",
            "ZW5hUmVzdWx0UmVxdWVzdBIQCgh0b2NrZW5JRBgBIAEoCRITCgt0b2NrZW5B",
            "cmVuYRgCIAEoCRISCgp0ZWFtVG9ja2VuGAMgASgJEgwKBE5pY2sYBCABKAki",
            "jgEKEEFyZW5hUmVzdWx0UmVwbHkSPgoKTWVzc2FnZU91dBgBIAEoDjIqLnBy",
            "b3RvYnVmLkFyZW5hUmVzdWx0UmVwbHkuQXJlbmFNZXNzYWdlT3V0IjoKD0Fy",
            "ZW5hTWVzc2FnZU91dBIICgRHT09EEAASDgoKQkFETUVTU0FHRRABEg0KCUNP",
            "TExJWklPThACMt8CCgVBcmVuYRJACgpTYXlCYWxhbmNlEhgucHJvdG9idWYu",
            "QmFsYW5jZVJlcXVlc3QaFi5wcm90b2J1Zi5CYWxhbmNlUmVwbHkiABI3CgVM",
            "b2dJbhIWLnByb3RvYnVmLkxvZ2luUmVxdWVzdBoULnByb3RvYnVmLkxvZ2lu",
            "UmVwbHkiABJLCg1BcmVuYUluaXRpYXRlEh4ucHJvdG9idWYuQXJlbmFJbml0",
            "aWF0ZVJlcXVlc3QaGC5wcm90b2J1Zi5BcmVuYUZpbmRSZXBseSIAEkMKCUFy",
            "ZW5hRmluZBIaLnByb3RvYnVmLkFyZW5hRmluZFJlcXVlc3QaGC5wcm90b2J1",
            "Zi5BcmVuYUZpbmRSZXBseSIAEkkKC0FyZW5hUmVzdWx0EhwucHJvdG9idWYu",
            "QXJlbmFSZXN1bHRSZXF1ZXN0GhoucHJvdG9idWYuQXJlbmFSZXN1bHRSZXBs",
            "eSIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BalanceRequest), global::Protobuf.BalanceRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BalanceReply), global::Protobuf.BalanceReply.Parser, new[]{ "Name", "Balance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.LoginRequest), global::Protobuf.LoginRequest.Parser, new[]{ "Name", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.LoginReply), global::Protobuf.LoginReply.Parser, new[]{ "TockenID", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArenaInitiateRequest), global::Protobuf.ArenaInitiateRequest.Parser, new[]{ "TockenID", "TockenArena", "TeamTocken", "Nick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArenaFindRequest), global::Protobuf.ArenaFindRequest.Parser, new[]{ "TockenArena", "TeamTocken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArenaFindReply), global::Protobuf.ArenaFindReply.Parser, new[]{ "NamesAlias" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArenaResultRequest), global::Protobuf.ArenaResultRequest.Parser, new[]{ "TockenID", "TockenArena", "TeamTocken", "Nick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArenaResultReply), global::Protobuf.ArenaResultReply.Parser, new[]{ "MessageOut" }, null, new[]{ typeof(global::Protobuf.ArenaResultReply.Types.ArenaMessageOut) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BalanceRequest : pb::IMessage<BalanceRequest> {
    private static readonly pb::MessageParser<BalanceRequest> _parser = new pb::MessageParser<BalanceRequest>(() => new BalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest(BalanceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest Clone() {
      return new BalanceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BalanceReply : pb::IMessage<BalanceReply> {
    private static readonly pb::MessageParser<BalanceReply> _parser = new pb::MessageParser<BalanceReply>(() => new BalanceReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceReply(BalanceReply other) : this() {
      name_ = other.name_;
      balance_ = other.balance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceReply Clone() {
      return new BalanceReply(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private float balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Balance, other.Balance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Balance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Balance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Balance != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Balance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Balance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceReply other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Balance != 0F) {
        Balance = other.Balance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 21: {
            Balance = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      name_ = other.name_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      tockenID_ = other.tockenID_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "tockenID" field.</summary>
    public const int TockenIDFieldNumber = 1;
    private string tockenID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TockenID {
      get { return tockenID_; }
      set {
        tockenID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TockenID != other.TockenID) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TockenID.Length != 0) hash ^= TockenID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TockenID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TockenID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TockenID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TockenID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.TockenID.Length != 0) {
        TockenID = other.TockenID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TockenID = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArenaInitiateRequest : pb::IMessage<ArenaInitiateRequest> {
    private static readonly pb::MessageParser<ArenaInitiateRequest> _parser = new pb::MessageParser<ArenaInitiateRequest>(() => new ArenaInitiateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaInitiateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaInitiateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaInitiateRequest(ArenaInitiateRequest other) : this() {
      tockenID_ = other.tockenID_;
      tockenArena_ = other.tockenArena_;
      teamTocken_ = other.teamTocken_;
      nick_ = other.nick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaInitiateRequest Clone() {
      return new ArenaInitiateRequest(this);
    }

    /// <summary>Field number for the "tockenID" field.</summary>
    public const int TockenIDFieldNumber = 1;
    private string tockenID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TockenID {
      get { return tockenID_; }
      set {
        tockenID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tockenArena" field.</summary>
    public const int TockenArenaFieldNumber = 2;
    private string tockenArena_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TockenArena {
      get { return tockenArena_; }
      set {
        tockenArena_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamTocken" field.</summary>
    public const int TeamTockenFieldNumber = 3;
    private string teamTocken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamTocken {
      get { return teamTocken_; }
      set {
        teamTocken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Nick" field.</summary>
    public const int NickFieldNumber = 4;
    private string nick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nick {
      get { return nick_; }
      set {
        nick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaInitiateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaInitiateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TockenID != other.TockenID) return false;
      if (TockenArena != other.TockenArena) return false;
      if (TeamTocken != other.TeamTocken) return false;
      if (Nick != other.Nick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TockenID.Length != 0) hash ^= TockenID.GetHashCode();
      if (TockenArena.Length != 0) hash ^= TockenArena.GetHashCode();
      if (TeamTocken.Length != 0) hash ^= TeamTocken.GetHashCode();
      if (Nick.Length != 0) hash ^= Nick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TockenID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TockenID);
      }
      if (TockenArena.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TockenArena);
      }
      if (TeamTocken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TeamTocken);
      }
      if (Nick.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Nick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TockenID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TockenID);
      }
      if (TockenArena.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TockenArena);
      }
      if (TeamTocken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamTocken);
      }
      if (Nick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaInitiateRequest other) {
      if (other == null) {
        return;
      }
      if (other.TockenID.Length != 0) {
        TockenID = other.TockenID;
      }
      if (other.TockenArena.Length != 0) {
        TockenArena = other.TockenArena;
      }
      if (other.TeamTocken.Length != 0) {
        TeamTocken = other.TeamTocken;
      }
      if (other.Nick.Length != 0) {
        Nick = other.Nick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TockenID = input.ReadString();
            break;
          }
          case 18: {
            TockenArena = input.ReadString();
            break;
          }
          case 26: {
            TeamTocken = input.ReadString();
            break;
          }
          case 34: {
            Nick = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArenaFindRequest : pb::IMessage<ArenaFindRequest> {
    private static readonly pb::MessageParser<ArenaFindRequest> _parser = new pb::MessageParser<ArenaFindRequest>(() => new ArenaFindRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaFindRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaFindRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaFindRequest(ArenaFindRequest other) : this() {
      tockenArena_ = other.tockenArena_;
      teamTocken_ = other.teamTocken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaFindRequest Clone() {
      return new ArenaFindRequest(this);
    }

    /// <summary>Field number for the "tockenArena" field.</summary>
    public const int TockenArenaFieldNumber = 1;
    private string tockenArena_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TockenArena {
      get { return tockenArena_; }
      set {
        tockenArena_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamTocken" field.</summary>
    public const int TeamTockenFieldNumber = 2;
    private string teamTocken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamTocken {
      get { return teamTocken_; }
      set {
        teamTocken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaFindRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaFindRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TockenArena != other.TockenArena) return false;
      if (TeamTocken != other.TeamTocken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TockenArena.Length != 0) hash ^= TockenArena.GetHashCode();
      if (TeamTocken.Length != 0) hash ^= TeamTocken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TockenArena.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TockenArena);
      }
      if (TeamTocken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TeamTocken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TockenArena.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TockenArena);
      }
      if (TeamTocken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamTocken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaFindRequest other) {
      if (other == null) {
        return;
      }
      if (other.TockenArena.Length != 0) {
        TockenArena = other.TockenArena;
      }
      if (other.TeamTocken.Length != 0) {
        TeamTocken = other.TeamTocken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TockenArena = input.ReadString();
            break;
          }
          case 18: {
            TeamTocken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArenaFindReply : pb::IMessage<ArenaFindReply> {
    private static readonly pb::MessageParser<ArenaFindReply> _parser = new pb::MessageParser<ArenaFindReply>(() => new ArenaFindReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaFindReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaFindReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaFindReply(ArenaFindReply other) : this() {
      namesAlias_ = other.namesAlias_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaFindReply Clone() {
      return new ArenaFindReply(this);
    }

    /// <summary>Field number for the "NamesAlias" field.</summary>
    public const int NamesAliasFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_namesAlias_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> namesAlias_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NamesAlias {
      get { return namesAlias_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaFindReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaFindReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!namesAlias_.Equals(other.namesAlias_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= namesAlias_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      namesAlias_.WriteTo(output, _repeated_namesAlias_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += namesAlias_.CalculateSize(_repeated_namesAlias_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaFindReply other) {
      if (other == null) {
        return;
      }
      namesAlias_.Add(other.namesAlias_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            namesAlias_.AddEntriesFrom(input, _repeated_namesAlias_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArenaResultRequest : pb::IMessage<ArenaResultRequest> {
    private static readonly pb::MessageParser<ArenaResultRequest> _parser = new pb::MessageParser<ArenaResultRequest>(() => new ArenaResultRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaResultRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaResultRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaResultRequest(ArenaResultRequest other) : this() {
      tockenID_ = other.tockenID_;
      tockenArena_ = other.tockenArena_;
      teamTocken_ = other.teamTocken_;
      nick_ = other.nick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaResultRequest Clone() {
      return new ArenaResultRequest(this);
    }

    /// <summary>Field number for the "tockenID" field.</summary>
    public const int TockenIDFieldNumber = 1;
    private string tockenID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TockenID {
      get { return tockenID_; }
      set {
        tockenID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tockenArena" field.</summary>
    public const int TockenArenaFieldNumber = 2;
    private string tockenArena_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TockenArena {
      get { return tockenArena_; }
      set {
        tockenArena_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamTocken" field.</summary>
    public const int TeamTockenFieldNumber = 3;
    private string teamTocken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamTocken {
      get { return teamTocken_; }
      set {
        teamTocken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Nick" field.</summary>
    public const int NickFieldNumber = 4;
    private string nick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nick {
      get { return nick_; }
      set {
        nick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaResultRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaResultRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TockenID != other.TockenID) return false;
      if (TockenArena != other.TockenArena) return false;
      if (TeamTocken != other.TeamTocken) return false;
      if (Nick != other.Nick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TockenID.Length != 0) hash ^= TockenID.GetHashCode();
      if (TockenArena.Length != 0) hash ^= TockenArena.GetHashCode();
      if (TeamTocken.Length != 0) hash ^= TeamTocken.GetHashCode();
      if (Nick.Length != 0) hash ^= Nick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TockenID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TockenID);
      }
      if (TockenArena.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TockenArena);
      }
      if (TeamTocken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TeamTocken);
      }
      if (Nick.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Nick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TockenID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TockenID);
      }
      if (TockenArena.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TockenArena);
      }
      if (TeamTocken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamTocken);
      }
      if (Nick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaResultRequest other) {
      if (other == null) {
        return;
      }
      if (other.TockenID.Length != 0) {
        TockenID = other.TockenID;
      }
      if (other.TockenArena.Length != 0) {
        TockenArena = other.TockenArena;
      }
      if (other.TeamTocken.Length != 0) {
        TeamTocken = other.TeamTocken;
      }
      if (other.Nick.Length != 0) {
        Nick = other.Nick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TockenID = input.ReadString();
            break;
          }
          case 18: {
            TockenArena = input.ReadString();
            break;
          }
          case 26: {
            TeamTocken = input.ReadString();
            break;
          }
          case 34: {
            Nick = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArenaResultReply : pb::IMessage<ArenaResultReply> {
    private static readonly pb::MessageParser<ArenaResultReply> _parser = new pb::MessageParser<ArenaResultReply>(() => new ArenaResultReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArenaResultReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArenaServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaResultReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaResultReply(ArenaResultReply other) : this() {
      messageOut_ = other.messageOut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArenaResultReply Clone() {
      return new ArenaResultReply(this);
    }

    /// <summary>Field number for the "MessageOut" field.</summary>
    public const int MessageOutFieldNumber = 1;
    private global::Protobuf.ArenaResultReply.Types.ArenaMessageOut messageOut_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ArenaResultReply.Types.ArenaMessageOut MessageOut {
      get { return messageOut_; }
      set {
        messageOut_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArenaResultReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArenaResultReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageOut != other.MessageOut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageOut != 0) hash ^= MessageOut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageOut != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageOut != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageOut);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArenaResultReply other) {
      if (other == null) {
        return;
      }
      if (other.MessageOut != 0) {
        MessageOut = other.MessageOut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            messageOut_ = (global::Protobuf.ArenaResultReply.Types.ArenaMessageOut) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ArenaResultReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ArenaMessageOut {
        [pbr::OriginalName("GOOD")] Good = 0,
        [pbr::OriginalName("BADMESSAGE")] Badmessage = 1,
        [pbr::OriginalName("COLLIZION")] Collizion = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
